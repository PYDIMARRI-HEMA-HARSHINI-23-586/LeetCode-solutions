*/Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].*/

class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        seen = {}
        
        # Iterate through the list of numbers
        for i, num in enumerate(nums):
            # Calculate the complement we need to find
            complement = target - num
        # If the complement is already in the dictionary, return the indices
            if complement in seen:
                return [seen[complement], i]
            
            # Otherwise, store the current number and its index
            seen[num] = i
